/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * 1,2,3,5,8,13,21,34,55,89,⋯
 * 1,2,3,5,8,13,21,34,55,89,⋯
 * By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of
 * the even-valued terms.
 *
 * Input Format
 * First line contains TT that denotes the number of test cases. This is followed by TT lines, each
 * containing an integer, NN.
 *
 * Output Format
 * Print the required answer for each test case.
 *
 * Constraints
 * 1≤T≤1051≤T≤105
 * 10≤N≤4×101610≤N≤4×1016
 * Sample Input
 *
 * 2
 * 10
 * 100
 * Sample Output
 *
 * 10
 * 44
 */
//todo 2 test cases failed
public class Problem2 {
  public static void main(String[] args) {
    //Scanner in = new Scanner(System.in);
    //int n = in.nextInt();
    //for (int i = 0; i < n; i++) {
    long sum = sumOfEvenFibbonacci(100);
    System.out.println(sum);
    //}
  }

  private static long sumOfEvenFibbonacci(int input) {
    long sum = 0;
    int n = 0;
    int fn = 0;
    int fn1 = 1;
    while (fn1 < input) {
      int temp = fn1 + fn;
      fn = fn1;
      fn1 = temp;
      System.out.println(fn1);
      if (fn % 2 == 0) {
        sum += fn;
      }
    }
    return sum;
  }
}
